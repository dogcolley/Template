@charset "UTF-8";

/* test for mibile git */

/*font-set*/
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+KR:100,300,400,500,700,900&subset=korean');
@import url('https://fonts.googleapis.com/css?family=Montserrat:100,200,300,400,500,600,700,800,900');
@import url('https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css');

/*teg-reset*/
      
html {overflow-y:auto}
body {margin:0;padding:0;font-size:18px;font-family: 'Spoqa Han Sans', sans-serif;background:#fff;font-weight:400;letter-spacing :-1px;line-height: 1;color:#777;word-break:keep-all;line-height:1}
html, h1, h2, h3, h4, h5, h6, form, fieldset, img {margin:0;padding:0;border:0}
h1, h2, h3, h4, h5, h6 {font-size:inherit;font-family:'Noto Sans KR', sans-serif;font-weight:inherit}
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {display:block}
em{font-style:normal} 
strong{font-weight:600}
ul, dl,dt,dd {margin:0;padding:0;list-style:none}
legend {position:absolute;margin:0;padding:0;font-size:0;line-height:0;text-indent:-9999em;overflow:hidden}
label, input, button, select, img {vertical-align:middle;font-size:inherit}
input, button {margin:0;padding:0;font-family: inherit;font-size:inherit;color:inherit}
input[type="submit"]{cursor:pointer}
button {cursor:pointer;letter-spacing:inherit}
input[type=submit] {-webkit-appearance:none;}
textarea, input[type=text], input[type=password]{ -webkit-border-radius:0; /* 둥근모서리 */ -webkit-appearance:none; /* 그림자 */ }
img {-ms-interpolation-mode:bicubic;} 
table{border-spacing:0px;border-collapse:collapse}
input{border-radius:0}
input::-webkit-input-placeholder {color:#999}
input:-ms-input-placeholder {color:#999} 
textarea, select {font-family:inherit;font-size:inherit}
select {margin:0}
p {margin:0;padding:0;word-break:keep-all;line-height: 1.6}  
hr {display:none}
pre {overflow-x:scroll;font-size:1.1em}
a {color:inherit;text-decoration:none;font-size:inherit}
select { border-radius:0; /* 아이폰 사파리 보더 없애기 */ -webkit-appearance:none; /* 화살표 없애기 for chrome*/ -moz-appearance:none; /* 화살표 없애기 for firefox*/ appearance:none /* 화살표 없애기 공통*/ } 
select::-ms-expand{ display:none /* 화살표 없애기 for IE10, 11*/ }
   
/*box-sizing-style*/
*, :after, :before {-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;}

/*common Calss*/
.sound_only, .blind{position:absolute;left:-9999px;width:0;height:0;overflow:hidden;text-indent:-9999px;font-size:0}
.clear:after{content: "";display: block;clear: both}
.caption_blind{width:0;height:0;text-indent:-9999px;font-size:0;overflow:hidden}
#skipNav{position:absolute;left:-9999px;text-align:center;width:100%;height:90px;background:rgba(0,0,0,0.8);color:#fff;font-size:30px;text-align:center;width:100%;line-height:90px;z-index:100}
#skipNav:focus{left:0}
/*==== sir.kr common style -start ====*/
  
/*pop*/
.hd_pops_footer{font-size:15px}

/* search color */
.sch_word {color:#00c4ac} 

/* page-view gd_bd*/
.pg {
}
.pg{
	a:focus,a:hover {text-decoration:none}
	&_wrap{clear:both;margin:30px 0 ;text-align:center}
	&_wrap:after {display:block;visibility:hidden;clear:both;content:""} 
	&page, &current {display:inline-block;vertical-align:middle;background:#f3f3f3;border:1px solid #bbbcc3}
	&page {color:#555;font-size:1.083em;height:30px;line-height:28px;padding:0 5px;min-width:30px;text-decoration:none;border-radius:3px;}
	&page:hover{background-color:#ddd}
	/*이부분에 이미지는 추가로 삽입해줘야합니다.*/
	&start {text-indent:-999px;overflow:hidden;background:url('../img/btn_first.gif') no-repeat 50% 50% #fff;padding:0;border:1px solid #bbb;}
	&prev {text-indent:-999px;overflow:hidden;background:url('../img/btn_prev.gif') no-repeat 50% 50% #fff;padding:0;border:1px solid #bbb}
	&end {text-indent:-999px;overflow:hidden;background:url('../img/btn_end.gif') no-repeat 50% 50% #fff;padding:0;border:1px solid #bbb}
	&next {text-indent:-999px;overflow:hidden;background:url('../img/btn_next.gif') no-repeat 50% 50% #fff;padding:0;border:1px solid #bbb}
	&start:hover,&prev:hover,&end:hover,&next:hover{background-color:#fafafa}
	&current {display:inline-block;background:#4c4f6f;color:#fff;font-weight:bold;height:30px;line-height:30px;padding:0 10px;min-width:30px;border-radius:3px;-webkit-box-shadow: inset 1px 1px 2px #222542;-moz-box-shadow:  inset 1px 1px 2px #222542;box-shadow: inset 1px 1px 2px #222542;}

}
/*==== sir.kr common style -end ====*/

/*==== jsh bt-style -start ====*/

/*
    No use Sass because sever base is not setting ruby And node's React libray

	guide : 가이드  해당스타일은 부트스트랩과같은 베이스, css와 사용자 정의 css를 합친 스타일입니다.  
            인스턴트 클레스, 고정형 클레스의 복합 조합입니다. 
            (The corresponding style in the Guide is a combination of base, such as bootstrap, and custom css.  
            Instant Class, a combination of fixed and fixed casts.)

		1.첫번째 이니셜 
			T = 테마 (Theme style) : 초기작성자가 수정하는 클레스로 버그왜 추가나 변경은 하지않는것을 추천드립니다.
			R = 반응형 (사용하지 않을시에 주석처리 : Annotate when not in use)
			U = 사용자 지정 (user style)
			J = 자바스크립트용 (javascript class)
			S = 샵전용 (shop class)
			PC = 피시버전용 (class for PC)
			Tab = 테블릿전용  (class for Tab)
			M = 모바일 전용(class for Mobile)
			
			+sass
			S : scss에서 사용하는 변수들
			C : scss의 style속성 변수들

		2.두번째 단축어
			ft = 폰트(font)
			bg = 백그라운드(background)
			fm = 폰트 패밀리(font-family)
			mg = 마진 (margin)    
			pd = 패딩 (padding)    
			cl = 컬러 (color)
			sz = 사이즈 (size)
			lh = 라인하이트 (line-height)
			fl = 플롯 (float)
			ps = 포지션 (position)
			wd = 넓이 (width)
			ht = 높이 (ht)
			gd = 가이드 (guide) 
			ly = 레이아웃(layout) 가로사이즈 제어
		
		3.참조어
			pc = 피시버전 (VER_PC)
			t = 테블릿버전 (VER_TAB)
			pt = 피시,테블릿버전 (VER_PC && VER_TAB)
			tm = 테블릿,모바일 (VER_TAB && VER MOBILE)
			m = 모바일버전 (VER_MOBILE)
			c = 공통 (common)
			full = 100%
*/

/* 
SCSS base Data 

!default : 값이 없으면 초기값을 할당 시켜준다.
#'에'{} : 문자 보간
!global (전역 설정)
중첩 안에서 & 키워드는 상위(부모) 선택자를 참조하여 치환합니다.
@at-root (중첩 벗어나기)
@mixin @inlclude : 믹스인은 해당 선언 사용후 그걸 인크루도 재활용한다. $mixin test-style ($매개변수){}
@extend 
@function($x, $y)
@return
@each $변수 in 데이터 {}
@while 조건 {}
@if [and],[or],[not] : ex @if ($a > 0) and ($b > 0){}  +@else if , @else
@import 다른 파일 가져오기
@for $i from 1 through 3 { @for $i from 1 to 3 {



색상(RGB / HSL / Opacity) 함수
mix($color1, $color2) : 두 개의 색을 섞습니다.
lighten($color, $amount) : 더 밝은색을 만듭니다.
darken($color, $amount) : 더 어두운색을 만듭니다.
saturate($color, $amount) : 색상의 채도를 올립니다.
desaturate($color, $amount) : 색상의 채도를 낮춥니다.
grayscale($color) : 색상을 회색으로 변환합니다.
invert($color) : 색상을 반전시킵니다.
rgba($color, $alpha) : 색상의 투명도를 변경합니다.
opacify($color, $amount) / fade-in($color, $amount) : 색상을 더 불투명하게 만듭니다.
transparentize($color, $amount) / fade-out($color, $amount) : 색상을 더 투명하게 만듭니다.

문자(String) 함수
unquote($string) : 문자에서 따옴표를 제거합니다.
quote($string) : 문자에 따옴표를 추가합니다.
str-insert($string, $insert, $index) : 문자의 index번째에 특정 문자를 삽입합니다.
str-index($string, $substring) : 문자에서 특정 문자의 첫 index를 반환합니다.
str-slice($string, $start-at, [$end-at]) : 문자에서 특정 문자(몇 번째 글자부터 몇 번째 글자까지)를 추출합니다.
to-upper-case($string) : 문자를 대문자를 변환합니다.
to-lower-case($string) : 문자를 소문자로 변환합니다.

숫자(Number) 함수
percentage($number) : 숫자(단위 무시)를 백분율로 변환합니다.
round($number) : 정수로 반올림합니다.
ceil($number) : 정수로 올림합니다.
floor($number) : 정수로 내림(버림)합니다.
abs($number) : 숫자의 절대 값을 반환합니다.
min($numbers…) : 숫자 중 최소 값을 찾습니다.
max($numbers…) : 숫자 중 최대 값을 찾습니다.
random() : 0 부터 1 사이의 난수를 반환합니다.

List 함수
모든 List 내장 함수는 기존 List 데이터를 갱신하지 않고 새 List 데이터를 반환합니다.
모든 List 내장 함수는 Map 데이터에서도 사용할 수 있습니다.

length($list) : List의 개수를 반환합니다.
nth($list, $n) : List에서 n번째 값을 반환합니다.
set-nth($list, $n, $value) : List에서 n번째 값을 다른 값으로 변경합니다.
join($list1, $list2, [$separator]) : 두 개의 List를 하나로 결합합니다.
zip($lists…) : 여러 List들을 하나의 다차원 List로 결합합니다.
index($list, $value) : List에서 특정 값의 index를 반환합니다.

Map 함수
모든 Map 내장 함수는 기존 Map 데이터를 갱신하지 않고 새 Map 데이터를 반환합니다.
map-get($map, $key) : Map에서 특정 key의 value를 반환합니다.
map-merge($map1, $map2) : 두 개의 Map을 병합하여 새로운 Map를 만듭니다.
map-keys($map) : Map에서 모든 key를 List로 반환합니다.
map-values($map) : Map에서 모든 value를 List로 반환합니다.

관리(Introspection) 함수
variable-exists(name) : 변수가 현재 범위에 존재하는지 여부를 반환합니다.(인수는 $없이 변수의 이름만 사용합니다.)
unit($number) : 숫자의 단위를 반환합니다.
unitless($number) : 숫자에 단위가 있는지 여부를 반환합니다.
comparable($number1, $number2) : 두 개의 숫자가 연산 가능한지 여부를 반환합니다.
*/

/*고정 공통 클래스*/
/*
$c_wd_full = width:
$s_area {left:auto;righ}
*/

/*sass 변수 모음*/
$j_device : ('.T_','.Tab_','.M_','.TM_','.PC_','.PM_'); 
$S_M: 640px; 
$S_T: 1024px;
$S_W: 1200;
/*mixin and function 모음*/
@mixin clear {content:'';clear:both;display:block}
@mixin area {margin-left:auto;margin-right:auto}

/*SCSS*/

$breakpoints: (
        'small': (max-width: 640px),
        'medium': (max-width: 1024px),
        'large': (max-width: 1200px),
) !default;

@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media #{inspect(map-get($breakpoints, $breakpoint))} {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
} 

@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: $S_M) { @content; }
  }
  @else if $media == medium-screens {
    @media only screen and (min-width: $S_M + 1) and (max-width: $S_T - 1) { @content; }
  }
  @else if $media == wide-screens {
    @media only screen and (min-width: $S_T) { @content; }
  }
}

/*
.profile-pic {
    float: left;
    width: 250px;

    @include respond-to(handhelds ) {
        width: 100%;
    }

    @include respond-to(medium-screens) {
        width: 125px;
    }

    @include respond-to(wide-screens) {
        float: none;
    }
}
*/

@mixin responde-pk01 {
	&wd_full {width:100%}
		&ht_full {height:100%} 
		&ps_{
			&rl{position:relative}		
			&ab{position:absolute} 
			&st{position:static}
			&fx{position:fixed}
		}
	
	
		&ds_{
			&block{display: block}
			&inbl{display: inline-block} 
			&in{display: inline}
			&table{display: table}
			&cell{display: table-cell}
		}
	
		&fl_{
			&lt{float:left}
			&rt{float:right}
			&Clt > *{float:left}
			&Crt > *{float:left}
		}
	
		&ft_{
			&cfff{color:#fff}
			&c000{color:#000}
			&c333{color:#333}
			&c555{color:#555}
			&c666{color:#666}
			&c777{color:#777}
			&c999{color:#999}
			&c868686{color:#868686}
		
			@for $i from 10 through 20{
				&sz#{$i}{font-size:$i+px}
			}  
		
			&szS{font-size:0.6em}
			&szSM{font-size:0.8em}
			&szM{font-size:1.2em}
			&szMB{font-size:1.4em}
			&szB{font-size:1.6em}
			&sm{font-size:0.8em}
			&md{font-size:1.2em}
			&bg{font-size:1.4em}
			&xl{font-size:1.6em}
		
			&ct{text-align:center}
			&lt{text-align:left}
			&rt{text-align:right}
		
			@for $i from 1 through 900{
				&wh#{$i*100}{font-size:($i*100)+px}
			}  
		}
		
		&vt_md{vertical-align:middle} &vt_top{vertical-align:top} &vt_btm{vertical-align:bottom}
			
		&lh_10{line-height:1.0}&lh_11{line-height:1.1}&lh_12{line-height:1.2}&lh_13{line-height:1.3}&lh_14{line-height:1.4}&lh_15{line-height:1.5}&lh_16{line-height:1.6}&lh_17{line-height:1.7}&lh_18{line-height:1.8}&lh_19{line-height:1.9}&lh_20{line-height:2.0}
	
		&bg_{
			&cfff{background:#fff}
			&cf9{background:#f9f9f9}
			&cd9{background:#d9d9d9}
			&c333{background:#333}
			&c000{background:#000}
		}
	
	
			
		&pd_{
			@for $i from 1 through 20{
				&lt{padding-left:5px * $i}
				&rt{padding-right:5px * $i}
				&top{padding-right:5px * $i}
				&btn{padding-bottom:5px * $i}
			}  
		}
	
		&mg_{
			@for $i from 1 through 20{
				&lt{margin-left:5px * $i}
				&rt{margin-right:5px * $i}
				&top{margin-right:5px * $i}
				&btn{margin-bottom:5px * $i}
			}  
		}
	
		&ly_{
			@for $i from 2 through 16{
				&#{$i} > *{float: left;width:calc( 100% / $i)}
				&#{$i}:after{@include clear}
			}
		}
	
		&ht_ct{display:table}
		&ht_ct > * {display:table-cell;vertical-align:middle;height:100%;text-align:center}
}
@each $device_val in $j_device  {
	#{$device_val}{
		@if ($device_val == '.M_' or $device_val == '.TM_'){
			@include respond-to(handhelds) { 
				@include responde-pk01;
			} 
		}
		@if($device_val == '.TM_'or $device_val == '.Tab_' or $device_val == '.PT_'){
			@include respond-to(medium-screens) {
				@include responde-pk01;
			}
		}
		@if($device_val == '.PC_')  {
			@include respond-to(wide-screens) {
				@include responde-pk01;
			}
		}@if{
			@include responde-pk01;
		}
		
	}
}

/*Javacript 연통 클래스*/
.J_{
	&N_C{}
	&_C{}
	&_slider{}
	&_modal{}	
}


/*사용자 지정 클래스*/
.U_ft_c01{color:#0f2f4c}
.U_ft_c02{color:#113e68}
.U_ft_c03{color:#ec0000}

.U_ft_fm01{font-family:""}
.U_ft_fm02{font-family:""}
.U_ft_fm03{font-family:""}

.U_bg_c01{background:#0f2f4c}
.U_bg_c02{background:#113e68}

.U_bd_01{border:1px solid #d9d9d9}

.U_area01{width:1200px;margin-left: auto;margin-right:auto}
.T_mg_ct{margin-left:auto;margin-right:auto}

.U_cl_btn01{}
.U_cl_btn02{}
.U_cl_btn03{}

.U_sz_btn01{}
.U_sz_btn02{}
.U_sz_btn03{}

/*U_tables*/
.U_table01{}
.U_table01_td{}
.U_table01_th{}


/*U_search_box*/
.U_search_wrap{}
.U_search_btn01{}
.U_search_input01{}

/*U_borad*/
.U_borad_list01{}

.U_borad_wirte01{}

.U_borad_view01{}

.U_btn_wrap01{}

/*U_form*/
.U_form01{}
.U_select01{}
.U_select02{}
.U_select03{}
.U_input01{}
.U_input02{}
.U_input03{}
.U_txtArea{}
.U_CkeckBox01{}
.U_CkeckBox02{}
.U_CkeckBox03{}
.U_Radio01{}
.U_Radio02{}
.U_Radio03{}

/*U_page*/
.U_pg_wrap{}
.U_pg_btn{}
.U_pg_num{}
.U_pg_next{}
.U_pg_end{}
.U_pg_prev{}
.U_pg_start{}

/*U_shops*/
.S_item_list01{}
.S_item_view01{}
.S_item_cate01{}

.S_review_list01{}
.S_review_wirte01{}
.S_review_view01{}





/*==== jsh bt-style -end ====*/
